name: testCI

on:
  workflow_dispatch:
    inputs:
      targetTag:
        type: string
        required: false
        description: 'Input tag here'
        default: ''

env:
  TARGET_BRANCH_NAME: develop
  SUBMODULE_DIR: themes/techblog
  NEW_BRANCH_BASE: design/
  COMMIT_MESSAGE: 'Update submodule by Github Actions'
  PR_TITLE: 'New Submodule Version is Released'
  PR_BODY: ''

jobs:
  Prepare:
    runs-on: ubuntu-latest
    steps:
      - name: Check Environments
        run: |
          git --version
          gh version
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.env.TARGET_BRANCH_NAME }}
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          fetch-depth: 0
          submodules: recursive
      - id: stepCLT
        name: Check the Latest Tag
        run: |
          cd "${SUBMODULE_DIR}"
          LATEST_TAG="$(git tag -l --sort -refname | head -n 1)"
          echo "::set-output name=latestTag::$LATEST_TAG"
      - name: Download a Current Tag Artifact
        if: ${{ ! github.event.inputs.tag }}
        uses: actions/download-artifact@v3.0.0
        with:
          name: currentTag
          path: .artifact/currentTag.json
      - id: stepSCTE
        name: Set the Current Tag to Environment
        if: ${{ success() }}
        run: |
          CURRENT_TAG="$(cat currentTag.json | jq '.version | @sh')"
          echo "::set-output name=currentTag::${{ steps.stepSCTE.outputs.currentTag }}"
      - id: stepSTTE
        name: Set the Target Tag to Environment
        if: ${{ always() }}
        run: echo "::set-output name=targetTag::${{ github.event.inputs.targetTag }}${{ steps.stepSCTE.outputs.currentTag }}"
      - name: Create a New Branch
        if: >-
          ${{
            steps.stepCLT.outputs.latestTag &&
            steps.stepSTTE.outputs.targetTag &&
            steps.stepSTTE.outputs.targetTag != steps.stepCLT.outputs.latestTag
          }}
        run: |
          git switch -c "${NEW_BRANCH_BASE}${{ steps.stepCLT.outputs.latestTag }}"
          git push -u origin "${NEW_BRANCH_BASE}${{ steps.stepCLT.outputs.latestTag }}"
      - name: Checkout Submodule by Latest Tag
        if: ${{ success() }}
        run: |
          cd "${SUBMODULE_DIR}"
          git checkout refs/tags/${{ steps.stepCLT.outputs.latestTag }}
      - name: Add and Commit Submodule Update
        run: |
          git add "${SUBMODULE_DIR}"
          git commit -m "${COMMIT_MESSAGE}"
